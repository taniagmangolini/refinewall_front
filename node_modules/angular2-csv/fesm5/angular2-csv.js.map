{"version":3,"file":"angular2-csv.js.map","sources":["ng://angular2-csv/lib/angular2-csv.service.ts","ng://angular2-csv/lib/angular2-csv.component.ts","ng://angular2-csv/lib/angular2-csv.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Angular2CsvService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'angular2csv',\n  template: `<button (click)=\"onDownload()\">{{ label_btn }}</button>`,\n  styles: []\n})\n\nexport class Angular2CsvComponent implements OnInit {\n\n  @Input() data: any[];\n  @Input() filename: string  = this.filename || 'mycsv.csv';\n  @Input() options: Options = this.objectAssign({}, ConfigDefaults, this.options);\n\n  label_btn: string = \"download\";\n  csv: string = '';\n\n  constructor() {}\n  /**\n   * Event Download\n   */\n  onDownload(): void {\n    this.generateCsv();\n  }\n  /**\n   * ngOnInit\n   */\n  ngOnInit() {}\n  /**\n   * [generateCsv description]\n   */\n  generateCsv(): void {\n\n    if (this.options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this.options.showTitle) {\n      this.csv += this.options.title + '\\r\\n\\n';\n    }\n\n    this.getHeaders();\n    this.getBody();\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return;\n    }\n\n    let blob = new Blob([this.csv], {type: 'text/csv;charset=utf8;'});\n\n    if (navigator.msSaveBlob) {\n\n      let filename = this.options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n\n    } else {\n\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('visibility', 'hidden');\n      link.download = this.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n\n      link.click();\n\n      document.body.removeChild(link);\n    }\n\n    this.csv = '';\n  }\n  /**\n   * Create Headers for Csv File\n   */\n  getHeaders(): void {\n    if (this.options.headers.length > 0) {\n      let row = '';\n      for (let column of this.options.headers) {\n        row += column + this.options.fieldSeparator;\n      }\n\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n  /**\n   * Create Headers\n   */\n  getBody(): void {\n\n    for (let dataRow of this.data) {\n\n      let row = '';\n\n      if(this.isEmptyObject(dataRow) && this.options.removeNewLines) {\n        continue;\n      }\n\n      if (typeof this.options.keys !== 'undefined' && this.options.keys.length) {\n\n        for (let key of this.options.keys) {\n          row += this.formartData(dataRow[key]) + this.options.fieldSeparator;\n        }\n\n        row = row.slice(0, -1);\n        this.csv += row + CsvConfigConsts.EOL;\n\n      } else {\n\n        for (let key in dataRow) {\n          if(dataRow[key]) {\n            row += this.formartData(dataRow[key]) + this.options.fieldSeparator;\n          }\n        }\n        this.csv += row + CsvConfigConsts.EOL;\n\n      }\n    }\n  }\n  /**\n   * Format Data\n   */\n  formartData(data: any) {\n\n    if (this.options.decimalseparator === 'locale' && this.isFloat(data)) {\n      return data.toLocaleString();\n    }\n\n    if (this.options.decimalseparator !== '.' && this.isFloat(data)) {\n      return data.toString().replace('.', this.options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n\n      if (this.options.quoteStrings || data.indexOf(',') > -1 || data.indexOf(\"\\n\") > -1 || data.indexOf(\"\\r\") > -1) {\n        data = this.options.quoteStrings + data + this.options.quoteStrings;\n      }\n\n      return data;\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n  /**\n   * Validate if object is not empty\n   */\n  isEmptyObject(obj: any) {\n    return (obj && (Object.keys(obj).length === 0));\n  }\n  /**\n   * Get Input is Float\n   */\n  isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n  /**\n   * Add object Values\n   */\n  toObject(val: any) {\n    if (val === null || val === undefined) {\n      throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n    return Object(val);\n  }\n  /**\n   * Add Values to Object\n   */\n  objectAssign(target: any, ...source: any[]) {\n    let from: any;\n    let to = this.toObject(target);\n    let symbols: any;\n\n    let hasOwnProperty = Object.prototype.hasOwnProperty;\n    let propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n    for (let s = 1; s < arguments.length; s++) {\n      from = Object(arguments[s]);\n\n      for (let key in from) {\n        if (hasOwnProperty.call(from, key)) {\n          to[key] = from[key];\n        }\n      }\n\n      if ((<any> Object).getOwnPropertySymbols) {\n        symbols = (<any> Object).getOwnPropertySymbols(from);\n        for (let symbol of symbols) {\n          if (propIsEnumerable.call(from, symbol)) {\n            to[symbol] = from[symbol];\n          }\n        }\n      }\n    }\n\n    return to;\n  }\n}\n/**\n * Option Interface\n */\nexport interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  keys: string[];\n  removeNewLines: boolean;\n}\n/**\n * CsvConfigConsts\n */\nexport class CsvConfigConsts {\n\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: string[] = [];\n  public static DEFAULT_KEY: string[] = [];\n  public static DEFAULT_REMOVE_NEW_LINES = false;\n}\n/**\n * Default Configurations\n */\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  keys: CsvConfigConsts.DEFAULT_KEY,\n  removeNewLines: CsvConfigConsts.DEFAULT_REMOVE_NEW_LINES\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Angular2CsvComponent } from './angular2-csv.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [Angular2CsvComponent],\n  exports: [Angular2CsvComponent]\n})\nexport class Angular2CsvModule { }\n"],"names":["tslib_1.__values"],"mappings":";;;;;;;;AAAA;IAOE;KAAiB;;gBALlB,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;6BAJD;;;;;;;;ICiBE;wBAN6B,IAAI,CAAC,QAAQ,IAAI,WAAW;uBAC7B,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC;yBAE3D,UAAU;mBAChB,EAAE;KAEA;;;;;;;;IAIhB,yCAAU;;;;IAAV;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;;;;;;;;IAID,uCAAQ;;;;IAAR,eAAa;;;;;;;;IAIb,0CAAW;;;;IAAX;QAEE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACvB,IAAI,CAAC,GAAG,IAAI,eAAe,CAAC,GAAG,CAAC;SACjC;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YAC1B,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC;SAC3C;QAED,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAC5B,OAAO;SACR;QAED,qBAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAC,IAAI,EAAE,wBAAwB,EAAC,CAAC,CAAC;QAElE,IAAI,SAAS,CAAC,UAAU,EAAE;YAExB,qBAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC;YACjE,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;SAEtC;aAAM;YAEL,qBAAI,GAAG,GAAG,oCAAoC,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrE,qBAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAEvC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAEtC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;YAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC;YAE1D,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAEhC,IAAI,CAAC,KAAK,EAAE,CAAC;YAEb,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACjC;QAED,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;KACf;;;;;;;;IAID,yCAAU;;;;IAAV;QACE,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACnC,qBAAI,GAAG,GAAG,EAAE,CAAC;;gBACb,KAAmB,IAAA,KAAAA,SAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAA,gBAAA;oBAAlC,IAAI,MAAM,WAAA;oBACb,GAAG,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;iBAC7C;;;;;;;;;YAED,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,GAAG,IAAI,GAAG,GAAG,eAAe,CAAC,GAAG,CAAC;SACvC;;KACF;;;;;;;;IAID,sCAAO;;;;IAAP;;YAEE,KAAoB,IAAA,KAAAA,SAAA,IAAI,CAAC,IAAI,CAAA,gBAAA;gBAAxB,IAAI,OAAO,WAAA;gBAEd,qBAAI,GAAG,GAAG,EAAE,CAAC;gBAEb,IAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;oBAC7D,SAAS;iBACV;gBAED,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE;;wBAExE,KAAgB,IAAA,KAAAA,SAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAA,gBAAA;4BAA5B,IAAI,GAAG,WAAA;4BACV,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;yBACrE;;;;;;;;;oBAED,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACvB,IAAI,CAAC,GAAG,IAAI,GAAG,GAAG,eAAe,CAAC,GAAG,CAAC;iBAEvC;qBAAM;oBAEL,KAAK,qBAAI,GAAG,IAAI,OAAO,EAAE;wBACvB,IAAG,OAAO,CAAC,GAAG,CAAC,EAAE;4BACf,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;yBACrE;qBACF;oBACD,IAAI,CAAC,GAAG,IAAI,GAAG,GAAG,eAAe,CAAC,GAAG,CAAC;iBAEvC;aACF;;;;;;;;;;KACF;;;;;;;;;IAID,0CAAW;;;;;IAAX,UAAY,IAAS;QAEnB,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,KAAK,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACpE,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;SAC9B;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,KAAK,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC/D,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACpE;QAED,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAEhC,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC7G,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;aACrE;YAED,OAAO,IAAI,CAAC;SACb;QAED,IAAI,OAAO,IAAI,KAAK,SAAS,EAAE;YAC7B,OAAO,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC;SAChC;QAED,OAAO,IAAI,CAAC;KACb;;;;;;;;;IAID,4CAAa;;;;;IAAb,UAAc,GAAQ;QACpB,QAAQ,GAAG,KAAK,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;KACjD;;;;;;;;;IAID,sCAAO;;;;;IAAP,UAAQ,KAAU;QAChB,OAAO,CAAC,KAAK,KAAK,KAAK,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;KACrE;;;;;;;;;IAID,uCAAQ;;;;;IAAR,UAAS,GAAQ;QACf,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACrC,MAAM,IAAI,SAAS,CAAC,uDAAuD,CAAC,CAAC;SAC9E;QACD,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;KACpB;;;;;;;;;;IAID,2CAAY;;;;;;IAAZ,UAAa,MAAW;QAAE,gBAAgB;aAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;YAAhB,+BAAgB;;QACxC,qBAAI,IAAS,CAAC;QACd,qBAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC/B,qBAAI,OAAY,CAAC;QAEjB,qBAAI,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;QACrD,qBAAI,gBAAgB,GAAG,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC;QAE7D,KAAK,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAE5B,KAAK,qBAAI,GAAG,IAAI,IAAI,EAAE;gBACpB,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;oBAClC,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;iBACrB;aACF;YAED,IAAI,mBAAO,MAAM,GAAE,qBAAqB,EAAE;gBACxC,OAAO,GAAG,mBAAO,MAAM,GAAE,qBAAqB,CAAC,IAAI,CAAC,CAAC;;oBACrD,KAAmB,IAAA,YAAAA,SAAA,OAAO,CAAA,gCAAA;wBAArB,IAAI,MAAM,oBAAA;wBACb,IAAI,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE;4BACvC,EAAE,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;yBAC3B;qBACF;;;;;;;;;aACF;SACF;QAED,OAAO,EAAE,CAAC;;KACX;;gBA1MF,SAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,2DAAyD;oBACnE,MAAM,EAAE,EAAE;iBACX;;;;;uBAIE,KAAK;2BACL,KAAK;0BACL,KAAK;;+BAZR;;;;;;;;0BAmOsB,MAAM;0BACN,QAAQ;8CAEY,GAAG;gDACD,GAAG;oCACf,GAAG;yCACE,KAAK;oCACV,WAAW;uCACR,WAAW;0CACR,KAAK;sCACT,IAAI;qCACK,EAAE;kCACL,EAAE;+CACC,KAAK;0BAhPhD;;;;;AAqPA,qBAAa,cAAc,GAAY;IACrC,QAAQ,EAAE,eAAe,CAAC,gBAAgB;IAC1C,cAAc,EAAE,eAAe,CAAC,uBAAuB;IACvD,YAAY,EAAE,eAAe,CAAC,aAAa;IAC3C,gBAAgB,EAAE,eAAe,CAAC,yBAAyB;IAC3D,UAAU,EAAE,eAAe,CAAC,mBAAmB;IAC/C,SAAS,EAAE,eAAe,CAAC,kBAAkB;IAC7C,KAAK,EAAE,eAAe,CAAC,aAAa;IACpC,MAAM,EAAE,eAAe,CAAC,eAAe;IACvC,OAAO,EAAE,eAAe,CAAC,cAAc;IACvC,IAAI,EAAE,eAAe,CAAC,WAAW;IACjC,cAAc,EAAE,eAAe,CAAC,wBAAwB;CACzD;;;;;;ACjQD;;;;gBAKC,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,YAAY;qBACb;oBACD,YAAY,EAAE,CAAC,oBAAoB,CAAC;oBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;iBAChC;;4BAXD;;;;;;;;;;;;;;;"}
